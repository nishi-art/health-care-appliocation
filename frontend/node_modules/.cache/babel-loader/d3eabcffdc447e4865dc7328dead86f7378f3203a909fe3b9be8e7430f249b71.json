{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayuto\\\\github\\\\health-care-application\\\\frontend\\\\src\\\\compornent\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport eyeOpen from '../asset/eye-open.png';\nimport eyeClose from '../asset/eye-close.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsRegistered\n}) => {\n  _s();\n  const [showPassword, setShowPassword] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [visibleErrorText, setVisibleErrorText] = useState(false);\n  const handleLogin = async () => {\n    setIsLoading(true);\n    try {\n      if (formData.email === '' || formData.password === '') {\n        throw new Error(\"メールアドレスとパスワード両方を入力してください\");\n      }\n      const response = await fetch('http://127.0.0.1:8000/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        //リクエストボディがJSON形式であることを指定\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        //バックエンドは{\"detail\": \"ユーザー名が...\"}のように詳細なエラーメッセージをJSON形式で返してくるのでそのオブジェクトを指定している\n        throw new Error(errorData.detail || `HTTPエラー: ${response.status}`);\n      }\n      const loginData = await response.json(); //.json()がPromiseを返すため非同期処理にする\n      console.log(`APIレスポンス:${loginData.message}`);\n      setIsRegistered(true);\n\n      //トークンをローカルストレージに保存\n      localStorage.setItem('token', loginData.access_token);\n\n      //認証済みユーザー情報の取得\n      const userResponse = await fetch('http://127.0.0.1:8000/users/me', {\n        headers: {\n          'Authorization': `Bearer ${loginData.access_token}`\n        }\n      });\n      if (!userResponse.ok) {\n        throw new Error('ユーザー情報の取得に失敗しました');\n      }\n      const userData = await userResponse.json();\n      console.log('ユーザー情報', userData);\n    } catch (error) {\n      if (error.message === 'メールアドレスまたはパスワードが正しくありません') {\n        setVisibleErrorText(true);\n      } else {\n        error instanceof TypeError ? alert('ネットワーク関連のエラーです') : alert(`エラー:${error.message}`);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleLogin();\n        },\n        children: [visibleErrorText && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u203B\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u307E\\u305F\\u306F\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u304C\\u9593\\u9055\\u3063\\u3066\\u3044\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mail\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'password' : 'text',\n            id: \"password\",\n            name: \"password\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"forgot-password\",\n          href: \"https://www.deepl.com/ja/translator\",\n          children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u304A\\u5FD8\\u308C\\u306E\\u65B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submit-btn\",\n          type: \"submit\",\n          value: isLoading ? \"ログイン中...\" : \"ログイン\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"eye-img-login\",\n        src: showPassword ? eyeClose : eyeOpen,\n        onClick: () => showPassword ? setShowPassword(false) : setShowPassword(true),\n        alt: \"eye-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"vqMHVj7EILSNe6nfLoOI41Z847Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","eyeOpen","eyeClose","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","setIsRegistered","_s","showPassword","setShowPassword","isLoading","setIsLoading","formData","setFormData","email","password","visibleErrorText","setVisibleErrorText","handleLogin","Error","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","detail","status","loginData","console","log","message","localStorage","setItem","access_token","userResponse","userData","error","TypeError","alert","handleInputChange","e","target","name","value","children","className","onSubmit","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","href","disabled","src","onClick","alt","_c","$RefreshReg$"],"sources":["C:/Users/ayuto/github/health-care-application/frontend/src/compornent/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport eyeOpen from '../asset/eye-open.png'\r\nimport eyeClose from '../asset/eye-close.png'\r\n\r\nconst Login = ({setIsRegistered}) => {\r\n    const [showPassword, setShowPassword] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [visibleErrorText, setVisibleErrorText] = useState(false);\r\n\r\n    const handleLogin = async() => {\r\n        setIsLoading(true);\r\n        try {\r\n            if(formData.email === '' || formData.password === '') {\r\n                throw new Error(\"メールアドレスとパスワード両方を入力してください\");\r\n            }\r\n            const response = await fetch('http://127.0.0.1:8000/users/login', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'}, //リクエストボディがJSON形式であることを指定\r\n                body: JSON.stringify(formData)\r\n            });\r\n            if(!response.ok) {\r\n                const errorData = await response.json();\r\n                //バックエンドは{\"detail\": \"ユーザー名が...\"}のように詳細なエラーメッセージをJSON形式で返してくるのでそのオブジェクトを指定している\r\n                throw new Error(errorData.detail || `HTTPエラー: ${response.status}`)\r\n            }\r\n            const loginData = await response.json(); //.json()がPromiseを返すため非同期処理にする\r\n            console.log(`APIレスポンス:${loginData.message}`);\r\n            setIsRegistered(true);\r\n\r\n            //トークンをローカルストレージに保存\r\n            localStorage.setItem('token', loginData.access_token);\r\n\r\n            //認証済みユーザー情報の取得\r\n            const userResponse = await fetch('http://127.0.0.1:8000/users/me', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${loginData.access_token}`,\r\n                }\r\n            });\r\n            if(!userResponse.ok) {\r\n                throw new Error('ユーザー情報の取得に失敗しました');\r\n            }\r\n            const userData = await userResponse.json();\r\n            console.log('ユーザー情報', userData);\r\n            \r\n        } catch (error) {\r\n            if(error.message === 'メールアドレスまたはパスワードが正しくありません') {\r\n                setVisibleErrorText(true);\r\n            }\r\n            else {\r\n                error instanceof TypeError ? \r\n                alert('ネットワーク関連のエラーです') : \r\n                alert(`エラー:${error.message}`)\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n    \r\n    const handleInputChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='form'>\r\n                <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleLogin();}}>\r\n                    {visibleErrorText && \r\n                        <div className='error-message'>\r\n                            <p>※メールアドレスまたはパスワードが間違っています</p>\r\n                        </div>\r\n                    }\r\n                    <div className='mail'>\r\n                        <label htmlFor=\"email\">メールアドレス</label>\r\n                        <input type=\"email\" id='email' name='email' onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className='password'>\r\n                        <label htmlFor=\"password\">パスワード</label>\r\n                        <input type={showPassword ? 'password' : 'text'} id='password' name='password' onChange={handleInputChange} />\r\n                    </div>\r\n                    <a className='forgot-password' href='https://www.deepl.com/ja/translator'>パスワードをお忘れの方</a>\r\n                    <input className='submit-btn' type=\"submit\" value={isLoading ? \"ログイン中...\" : \"ログイン\"} disabled={isLoading} />\r\n                </form>\r\n                <img className='eye-img-login' src={showPassword ? eyeClose : eyeOpen} \r\n                    onClick={() => showPassword ? setShowPassword(false) : setShowPassword(true)} \r\n                    alt=\"eye-image\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}