{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayuto\\\\github\\\\health-care-application\\\\frontend\\\\src\\\\compornent\\\\QuestionToAI.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionToAI = () => {\n  _s();\n  const [userInput, setUserInput] = useState({\n    'user_input': ''\n  });\n  const [aiOutput, setAiOutput] = useState();\n  const sendingQuestion = async () => {\n    const response = await fetch('http://127.0.0.1:8000/users/question', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userInput)\n    });\n  };\n  const handleChangeUserInput = e => {\n    setUserInput({\n      'user_input': e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-to-ai\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"question-box\",\n          value: userInput.user_input,\n          onChange: handleChangeUserInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: sendingQuestion,\n          children: \"\\u56DE\\u7B54\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [aiOutput, \"a\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(QuestionToAI, \"bJelWAVGCIQCOK/NYsPHoaQ6N9s=\");\n_c = QuestionToAI;\nexport default QuestionToAI;\nvar _c;\n$RefreshReg$(_c, \"QuestionToAI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionToAI","_s","userInput","setUserInput","aiOutput","setAiOutput","sendingQuestion","response","fetch","method","headers","body","JSON","stringify","handleChangeUserInput","e","target","value","children","className","user_input","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ayuto/github/health-care-application/frontend/src/compornent/QuestionToAI.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst QuestionToAI = () => {\r\n    const [userInput, setUserInput] = useState({\r\n        'user_input': '',\r\n    });\r\n    const [aiOutput, setAiOutput] = useState();\r\n\r\n    const sendingQuestion = async() => {\r\n        const response = await fetch('http://127.0.0.1:8000/users/question', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(userInput),\r\n        })\r\n    }\r\n\r\n    const handleChangeUserInput = (e) => {\r\n        setUserInput({\r\n            'user_input': e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='question-to-ai'>\r\n                <div className='question-form'>\r\n                    <textarea className='question-box' value={userInput.user_input} onChange={handleChangeUserInput}></textarea>\r\n                    <button className='send-button' onClick={sendingQuestion}>回答</button>\r\n                </div>\r\n                <p>{aiOutput}a</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionToAI"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC;IACvC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAE1C,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAW;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;IAClC,CAAC,CAAC;EACN,CAAC;EAED,MAAMY,qBAAqB,GAAIC,CAAC,IAAK;IACjCZ,YAAY,CAAC;MACT,YAAY,EAAEY,CAAC,CAACC,MAAM,CAACC;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,oBACIpB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACIrB,OAAA;MAAKsB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC3BrB,OAAA;QAAKsB,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC1BrB,OAAA;UAAUsB,SAAS,EAAC,cAAc;UAACF,KAAK,EAAEf,SAAS,CAACkB,UAAW;UAACC,QAAQ,EAAEP;QAAsB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAC5G5B,OAAA;UAAQsB,SAAS,EAAC,aAAa;UAACO,OAAO,EAAEpB,eAAgB;UAAAY,QAAA,EAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC,eACN5B,OAAA;QAAAqB,QAAA,GAAId,QAAQ,EAAC,GAAC;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAxB,EAAA,CA/BKD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAiClB,eAAeA,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}