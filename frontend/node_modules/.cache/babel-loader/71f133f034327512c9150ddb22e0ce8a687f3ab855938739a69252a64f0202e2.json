{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayuto\\\\github\\\\health-care-application\\\\frontend\\\\src\\\\compornent\\\\Login.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const togglePassword = () => {\n    const passwordInput = document.getElementById('password');\n    passwordInput.type === 'password' ? passwordInput.type = 'text' : passwordInput.type = 'password';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mail\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => togglePassword(),\n            children: \"\\uD83D\\uDC41\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","togglePassword","passwordInput","document","getElementById","type","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ayuto/github/health-care-application/frontend/src/compornent/Login.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Login = () => {\r\n    const togglePassword = () => {\r\n        const passwordInput = document.getElementById('password');\r\n        passwordInput.type === 'password' ? \r\n            passwordInput.type = 'text' : \r\n            passwordInput.type = 'password'\r\n    }\r\n    return (\r\n        <>\r\n            <div className='login-form'>\r\n                <p>„É≠„Ç∞„Ç§„É≥</p>\r\n                <form>\r\n                    <div className='mail'>\r\n                        <label htmlFor=\"email\">„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ</label>\r\n                        <input type=\"email\" id='email' name='email' />\r\n                    </div>\r\n                    <div className='password'>\r\n                        <label htmlFor=\"password\">„Éë„Çπ„ÉØ„Éº„Éâ</label>\r\n                        <input type=\"password\" id='password' name='password' />\r\n                        <button type='button' onClick={() => togglePassword()}>üëÅ</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IACzDF,aAAa,CAACG,IAAI,KAAK,UAAU,GAC7BH,aAAa,CAACG,IAAI,GAAG,MAAM,GAC3BH,aAAa,CAACG,IAAI,GAAG,UAAU;EACvC,CAAC;EACD,oBACIR,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACIT,OAAA;MAAKU,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBT,OAAA;QAAAS,QAAA,EAAG;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACXd,OAAA;QAAAS,QAAA,gBACIT,OAAA;UAAKU,SAAS,EAAC,MAAM;UAAAD,QAAA,gBACjBT,OAAA;YAAOe,OAAO,EAAC,OAAO;YAAAN,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtCd,OAAA;YAAOQ,IAAI,EAAC,OAAO;YAACQ,EAAE,EAAC,OAAO;YAACC,IAAI,EAAC;UAAO;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACNd,OAAA;UAAKU,SAAS,EAAC,UAAU;UAAAD,QAAA,gBACrBT,OAAA;YAAOe,OAAO,EAAC,UAAU;YAAAN,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvCd,OAAA;YAAOQ,IAAI,EAAC,UAAU;YAACQ,EAAE,EAAC,UAAU;YAACC,IAAI,EAAC;UAAU;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvDd,OAAA;YAAQQ,IAAI,EAAC,QAAQ;YAACU,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAAC,CAAE;YAAAK,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAK,EAAA,GAzBKhB,KAAK;AA2BX,eAAeA,KAAK;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}