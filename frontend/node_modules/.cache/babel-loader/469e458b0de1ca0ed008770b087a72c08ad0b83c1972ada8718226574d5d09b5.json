{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayuto\\\\github\\\\health-care-application\\\\frontend\\\\src\\\\compornent\\\\NewRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport eyeOpen from '../asset/eye-open.png';\nimport eyeClose from '../asset/eye-close.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewRegistration = ({\n  setIsRegistered\n}) => {\n  _s();\n  const [showPassword, setShowPassword] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [visibleErrorText, setVisibleErrorText] = useState(false);\n  const handleRegistration = async () => {\n    setIsLoading(true);\n    try {\n      if (formData.email === '' || formData.password === '') {\n        throw new Error('メールアドレスとパスワード両方を入力してください');\n      }\n      const response = await fetch('http://127.0.0.1:8000/users/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || `HTTPエラー: ${response.status}`);\n      }\n      const registrationData = await response.json();\n      console.log('APIレスポンス:', registrationData);\n      setIsRegistered(true);\n    } catch (error) {\n      if (error.message === 'このメールアドレスは既に使用されています') {\n        /*const visibility = document.querySelector('.error-message-registration');\r\n        visibility.classList.remove('hidden')*/\n        setVisibleErrorText(true);\n      } else {\n        error instanceof TypeError ? alert('ネットワーク関連のエラーです') : alert(`${error.name}:${error.message}`);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleRegistration();\n        },\n        children: [visibleErrorText && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message hidden error-message-registration\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u203B\\u3053\\u306E\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u306F\\u65E2\\u306B\\u4F7F\\u7528\\u3055\\u308C\\u3066\\u3044\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mail\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'password' : 'text',\n            id: \"password\",\n            name: \"password\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submit-btn\",\n          type: \"submit\",\n          value: isLoading ? \"登録中...\" : \"新規登録\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"eye-img-registration\",\n        src: showPassword ? eyeClose : eyeOpen,\n        onClick: () => showPassword ? setShowPassword(false) : setShowPassword(true),\n        alt: \"eye-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(NewRegistration, \"vqMHVj7EILSNe6nfLoOI41Z847Q=\");\n_c = NewRegistration;\nexport default NewRegistration;\nvar _c;\n$RefreshReg$(_c, \"NewRegistration\");","map":{"version":3,"names":["React","useState","eyeOpen","eyeClose","jsxDEV","_jsxDEV","Fragment","_Fragment","NewRegistration","setIsRegistered","_s","showPassword","setShowPassword","isLoading","setIsLoading","formData","setFormData","email","password","visibleErrorText","setVisibleErrorText","handleRegistration","Error","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","detail","status","registrationData","console","log","error","message","TypeError","alert","name","handleInputChange","e","target","value","children","className","onSubmit","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","disabled","src","onClick","alt","_c","$RefreshReg$"],"sources":["C:/Users/ayuto/github/health-care-application/frontend/src/compornent/NewRegistration.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport eyeOpen from '../asset/eye-open.png';\r\nimport eyeClose from '../asset/eye-close.png';\r\n\r\nconst NewRegistration = ({setIsRegistered}) => {\r\n    const [showPassword, setShowPassword] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [visibleErrorText, setVisibleErrorText] = useState(false);\r\n\r\n    const handleRegistration = async() => {\r\n        setIsLoading(true);\r\n        try {\r\n            if(formData.email === '' || formData.password === '') {\r\n                throw new Error('メールアドレスとパスワード両方を入力してください');\r\n            }\r\n            const response = await fetch('http://127.0.0.1:8000/users/registration', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(formData)\r\n            });\r\n            if(!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.detail || `HTTPエラー: ${response.status}`)\r\n            }\r\n            const registrationData = await response.json();\r\n            console.log('APIレスポンス:', registrationData);\r\n            setIsRegistered(true);\r\n        } catch(error) {\r\n            if(error.message === 'このメールアドレスは既に使用されています') {\r\n                /*const visibility = document.querySelector('.error-message-registration');\r\n                visibility.classList.remove('hidden')*/\r\n                setVisibleErrorText(true);\r\n            }\r\n            else {\r\n                error instanceof TypeError ? \r\n                alert('ネットワーク関連のエラーです') : \r\n                alert(`${error.name}:${error.message}`)\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n    \r\n    const handleInputChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='form'>\r\n                <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleRegistration();}}>\r\n                    {visibleErrorText && \r\n                        <div className='error-message hidden error-message-registration'>\r\n                            <p>※このメールアドレスは既に使用されています</p>\r\n                        </div>\r\n                    }\r\n                    <div className='mail'>\r\n                        <label htmlFor=\"email\">メールアドレス</label>\r\n                        <input type=\"email\" id='email' name='email' onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className='password'>\r\n                        <label htmlFor=\"password\">パスワード</label>\r\n                        <input type={showPassword ? 'password' : 'text'} id='password' name='password' onChange={handleInputChange} />\r\n                    </div>\r\n                    <input className='submit-btn' type=\"submit\" value={isLoading ? \"登録中...\" : \"新規登録\"} disabled={isLoading} />\r\n                </form>\r\n                <img className='eye-img-registration' src={showPassword ? eyeClose : eyeOpen} \r\n                    onClick={() => showPassword ? setShowPassword(false) : setShowPassword(true)} \r\n                    alt=\"eye-image\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewRegistration"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}