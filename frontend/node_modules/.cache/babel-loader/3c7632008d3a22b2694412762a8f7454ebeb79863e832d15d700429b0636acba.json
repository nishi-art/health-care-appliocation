{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayuto\\\\github\\\\health-care-application\\\\frontend\\\\src\\\\compornent\\\\Calender.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calender = () => {\n  _s();\n  const currentYear = new Date().getFullYear();\n  const currentMonth = new Date().getMonth() + 1;\n  const years = [currentYear + 1, currentYear, currentYear - 1, currentYear - 2];\n  const months = Array.from({\n    length: 12\n  }, (_, i) => i + 1);\n  const [selectedYear, setSelectedYear] = useState(JSON.parse(localStorage.getItem('CaCoSeletedYear') || currentYear));\n  const [selectedMonth, setSelectedMonth] = useState(JSON.parse(localStorage.getItem('CaCoSelectedMonth') || currentMonth));\n  const daysInMonth = new Date(selectedYear, selectedMonth, 0).getDate();\n  const firstDayOfWeek = new Date(selectedYear, selectedMonth - 1, 1).getDay();\n  const blanks = Array.from({\n    length: firstDayOfWeek\n  });\n  const [calenderData, setCalenderData] = useState({});\n  const token = localStorage.getItem('token');\n  const location = useLocation();\n  const handleSelectYear = e => {\n    setSelectedYear(Number(e.target.value));\n  };\n  const handleSelectMonth = e => {\n    setSelectedMonth(Number(e.target.value));\n  };\n  const navigate = useNavigate();\n  const fetchMonthlyHospitalMemos = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/users/hospital/list?year=${selectedYear}&month=${selectedMonth}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('カレンダーのデータ取得に失敗しました。');\n      const hospitalMap = {};\n      const data = await response.json();\n      data.forEach(item => {\n        hospitalMap[item.day] = item.hospital;\n      });\n      setCalenderData(hospitalMap);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchMonthlyHospitalMemos();\n    localStorage.setItem('CaCoSelectedYear', JSON.stringify(selectedYear));\n    localStorage.setItem('CaCoSelectedMonth', JSON.stringify(selectedMonth));\n  }, [selectedYear, selectedMonth, location.pathname]);\n  useEffect(() => {\n    // console.log(calenderData);\n  }, [calenderData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"health-care\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-year-month\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select-year\",\n          size: \"1\",\n          value: selectedYear,\n          onChange: handleSelectYear,\n          children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select-month\",\n          size: \"1\",\n          value: selectedMonth,\n          onChange: handleSelectMonth,\n          children: months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: month,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calender\",\n        children: [blanks.map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blank\"\n        }, `blank-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)), [...Array(daysInMonth)].map((_, i) => {\n          const dayOfWeek = (firstDayOfWeek + i) % 7;\n          let dayClass = 'day';\n          if (dayOfWeek === 0) dayClass += ' sunday';\n          if (dayOfWeek === 6) dayClass += ' saturday';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: dayClass,\n            onClick: () => navigate(`/calender/${selectedYear}/${selectedMonth}/${i + 1}`),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"day-text\",\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hospital-schedule\",\n              children: [\"\\uFF1C\\u75C5\\u9662\\uFF1E\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 70\n              }, this), calenderData[i + 1] || \"なし\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, `${dayClass}-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Calender, \"s8JWGH2wheeO4wEbT6+XYqDfXgo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Calender;\nexport default Calender;\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Calender","_s","currentYear","Date","getFullYear","currentMonth","getMonth","years","months","Array","from","length","_","i","selectedYear","setSelectedYear","JSON","parse","localStorage","getItem","selectedMonth","setSelectedMonth","daysInMonth","getDate","firstDayOfWeek","getDay","blanks","calenderData","setCalenderData","token","location","handleSelectYear","e","Number","target","value","handleSelectMonth","navigate","fetchMonthlyHospitalMemos","response","fetch","headers","ok","Error","hospitalMap","data","json","forEach","item","day","hospital","error","alert","message","setItem","stringify","pathname","children","className","size","onChange","map","year","fileName","_jsxFileName","lineNumber","columnNumber","month","dayOfWeek","dayClass","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ayuto/github/health-care-application/frontend/src/compornent/Calender.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst Calender = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    const currentMonth = new Date().getMonth() + 1;\r\n    const years = [currentYear+1, currentYear, currentYear-1, currentYear-2];\r\n    const months = Array.from({length: 12}, (_,i)=>i+1);\r\n    const [selectedYear, setSelectedYear] = useState(\r\n        JSON.parse(localStorage.getItem('CaCoSeletedYear') || currentYear));\r\n    const [selectedMonth, setSelectedMonth] = useState(\r\n        JSON.parse(localStorage.getItem('CaCoSelectedMonth') || currentMonth));\r\n    const daysInMonth = new Date(selectedYear, selectedMonth, 0).getDate();\r\n    const firstDayOfWeek = new Date(selectedYear, selectedMonth -1 , 1).getDay();\r\n    const blanks = Array.from({length: firstDayOfWeek});\r\n    const [calenderData, setCalenderData] = useState({});\r\n    const token = localStorage.getItem('token');\r\n    const location = useLocation();\r\n    const handleSelectYear = (e) => {\r\n        setSelectedYear(Number(e.target.value));\r\n    };\r\n    const handleSelectMonth = (e) => {\r\n        setSelectedMonth(Number(e.target.value));\r\n    };\r\n    const navigate = useNavigate();\r\n    const fetchMonthlyHospitalMemos = async() => {\r\n            try {\r\n                const response = await fetch(`http://127.0.0.1:8000/users/hospital/list?year=${selectedYear}&month=${selectedMonth}`, {\r\n                    headers: {'Authorization': `Bearer ${token}`}\r\n                });\r\n                if (!response.ok) throw new Error('カレンダーのデータ取得に失敗しました。');\r\n                const hospitalMap = {};\r\n                const data = await response.json();\r\n                data.forEach((item) => {\r\n                    hospitalMap[item.day] = item.hospital\r\n                });\r\n                setCalenderData(hospitalMap);\r\n            } catch (error) {\r\n                alert(error.message);\r\n            }\r\n        };\r\n    useEffect(() => {\r\n        fetchMonthlyHospitalMemos();\r\n        localStorage.setItem('CaCoSelectedYear', JSON.stringify(selectedYear));\r\n        localStorage.setItem('CaCoSelectedMonth', JSON.stringify(selectedMonth));\r\n    }, [selectedYear, selectedMonth, location.pathname]);\r\n\r\n    useEffect(() => {\r\n        // console.log(calenderData);\r\n    }, [calenderData]);\r\n\r\n    return (\r\n        <>  \r\n            <div className='health-care'>\r\n                <div className='select-year-month'>\r\n                    <select className='select-year' size='1' value={selectedYear} onChange={handleSelectYear}>\r\n                        {years.map((year) => (\r\n                            <option key={year} value={year}>{year}</option>\r\n                        ))}\r\n                    </select>\r\n                    <select className='select-month' size='1' value={selectedMonth} onChange={handleSelectMonth}>\r\n                        {months.map((month) => (\r\n                            <option key={month} value={month}>{month}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className='calender'>\r\n                    {blanks.map((_, i) => (\r\n                        <div className='blank' key={`blank-${i}`}></div>\r\n                    ))}\r\n                    {[...Array(daysInMonth)].map((_, i) => {\r\n                        const dayOfWeek = (firstDayOfWeek + i) % 7;\r\n                        let dayClass = 'day';\r\n                        if (dayOfWeek === 0) dayClass += ' sunday';\r\n                        if (dayOfWeek === 6) dayClass += ' saturday';\r\n                        return (\r\n                            <div \r\n                            className={dayClass} \r\n                            key={`${dayClass}-${i}`}\r\n                            onClick={() => navigate(`/calender/${selectedYear}/${selectedMonth}/${i + 1}`)}>\r\n                                <p className='day-text'>{i+1}</p>\r\n                                <p className='hospital-schedule'>＜病院＞<br/>{calenderData[i+1] || \"なし\"}</p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Calender"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}