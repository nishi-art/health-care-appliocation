{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayuto\\\\github\\\\health-care-application\\\\frontend\\\\src\\\\compornent\\\\NewRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport eyeOpen from '../asset/eye-open.png';\nimport eyeClose from '../asset/eye-close.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewRegistration = () => {\n  _s();\n  const [showPassword, setShowPassword] = useState(true);\n  const handleRegistration = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/users/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({})\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || `HTTPエラー: ${response.status}`);\n      }\n      const registrationData = await response.json();\n      console.log(registrationData.message);\n    } catch (error) {\n      error instanceof TypeError ? alert('ネットワーク関連のエラーです') : alert(`エラー:${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleRegistration();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mail\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'password' : 'text',\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submit-btn\",\n          type: \"submit\",\n          value: \"\\u65B0\\u898F\\u767B\\u9332\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"eye-img\",\n        src: showPassword ? eyeClose : eyeOpen,\n        onClick: () => showPassword ? setShowPassword(false) : setShowPassword(true),\n        alt: \"eye-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(NewRegistration, \"i5AbipRsumJPk3wMFjWgJyaat30=\");\n_c = NewRegistration;\nexport default NewRegistration;\nvar _c;\n$RefreshReg$(_c, \"NewRegistration\");","map":{"version":3,"names":["React","useState","eyeOpen","eyeClose","jsxDEV","_jsxDEV","Fragment","_Fragment","NewRegistration","_s","showPassword","setShowPassword","handleRegistration","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","status","registrationData","console","log","message","error","TypeError","alert","children","className","onSubmit","e","preventDefault","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","src","onClick","alt","_c","$RefreshReg$"],"sources":["C:/Users/ayuto/github/health-care-application/frontend/src/compornent/NewRegistration.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport eyeOpen from '../asset/eye-open.png';\r\nimport eyeClose from '../asset/eye-close.png';\r\n\r\nconst NewRegistration = () => {\r\n    const [showPassword, setShowPassword] = useState(true);\r\n\r\n    const handleRegistration = async() => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/users/registration', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({})\r\n            });\r\n            if(!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.detail || `HTTPエラー: ${response.status}`)\r\n            }\r\n            const registrationData = await response.json();\r\n            console.log(registrationData.message);\r\n        } catch(error) {\r\n            error instanceof TypeError ? \r\n                alert('ネットワーク関連のエラーです') : \r\n                alert(`エラー:${error.message}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <div className='form'>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleRegistration();}}>\r\n                <div className='mail'>\r\n                    <label htmlFor=\"email\">メールアドレス</label>\r\n                    <input type=\"email\" id='email' name='email' />\r\n                </div>\r\n                <div className='password'>\r\n                    <label htmlFor=\"password\">パスワード</label>\r\n                    <input type={showPassword ? 'password' : 'text'} id='password' name='password' />\r\n                </div>\r\n                <input className='submit-btn' type=\"submit\" value=\"新規登録\" />\r\n            </form>\r\n            <img className='eye-img' src={showPassword ? eyeClose : eyeOpen} \r\n                onClick={() => showPassword ? setShowPassword(false) : setShowPassword(true)} \r\n                alt=\"eye-image\" />\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default NewRegistration"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAW;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC;MACF,IAAG,CAACN,QAAQ,CAACO,EAAE,EAAE;QACb,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,MAAM,IAAI,YAAYX,QAAQ,CAACY,MAAM,EAAE,CAAC;MACtE;MACA,MAAMC,gBAAgB,GAAG,MAAMb,QAAQ,CAACS,IAAI,CAAC,CAAC;MAC9CK,OAAO,CAACC,GAAG,CAACF,gBAAgB,CAACG,OAAO,CAAC;IACzC,CAAC,CAAC,OAAMC,KAAK,EAAE;MACXA,KAAK,YAAYC,SAAS,GACtBC,KAAK,CAAC,gBAAgB,CAAC,GACvBA,KAAK,CAAC,OAAOF,KAAK,CAACD,OAAO,EAAE,CAAC;IACrC;EACJ,CAAC;EAED,oBACAxB,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACI5B,OAAA;MAAK6B,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjB5B,OAAA;QAAM8B,QAAQ,EAAGC,CAAC,IAAK;UACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;UAClBzB,kBAAkB,CAAC,CAAC;QAAC,CAAE;QAAAqB,QAAA,gBACvB5B,OAAA;UAAK6B,SAAS,EAAC,MAAM;UAAAD,QAAA,gBACjB5B,OAAA;YAAOiC,OAAO,EAAC,OAAO;YAAAL,QAAA,EAAC;UAAO;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtCrC,OAAA;YAAOsC,IAAI,EAAC,OAAO;YAACC,EAAE,EAAC,OAAO;YAACC,IAAI,EAAC;UAAO;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACNrC,OAAA;UAAK6B,SAAS,EAAC,UAAU;UAAAD,QAAA,gBACrB5B,OAAA;YAAOiC,OAAO,EAAC,UAAU;YAAAL,QAAA,EAAC;UAAK;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvCrC,OAAA;YAAOsC,IAAI,EAAEjC,YAAY,GAAG,UAAU,GAAG,MAAO;YAACkC,EAAE,EAAC,UAAU;YAACC,IAAI,EAAC;UAAU;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CAAC,eACNrC,OAAA;UAAO6B,SAAS,EAAC,YAAY;UAACS,IAAI,EAAC,QAAQ;UAACG,KAAK,EAAC;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACPrC,OAAA;QAAK6B,SAAS,EAAC,SAAS;QAACa,GAAG,EAAErC,YAAY,GAAGP,QAAQ,GAAGD,OAAQ;QAC5D8C,OAAO,EAAEA,CAAA,KAAMtC,YAAY,GAAGC,eAAe,CAAC,KAAK,CAAC,GAAGA,eAAe,CAAC,IAAI,CAAE;QAC7EsC,GAAG,EAAC;MAAW;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC,gBACR,CAAC;AAEP,CAAC;AAAAjC,EAAA,CA7CKD,eAAe;AAAA0C,EAAA,GAAf1C,eAAe;AA+CrB,eAAeA,eAAe;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}